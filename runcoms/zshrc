#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#
# Customize to your needs...
#
# Customization by Xavier Cambar <xcambar@gmail.com> (For my own needs)
#

# Reclaim Ctrl-S and Ctrl-Q
stty start undef
stty stop undef

__myAliases=(
  n node
  r ruby
  v vim
)


__suffixAliases=(
  'md'
  'js'
  'json'
  'rb'
  'php'
  'html'
  'zshrc'
  'vimrc'
)


#Python executables
path=(
  $path
  /usr/local/share/python
)

# Application aliases
typeset -A __myAliases
for al in ${(k)__myAliases}; do alias $al=$__myAliases[$al]; done
# Suffix aliases
for al ($__suffixAliases); do alias -s $al=$EDITOR; done

# Can not remember what this one is useful at. jsctags seems perfectly fine without it...
# export NODE_PATH=/usr/local/lib/jsctags/:$NODE_PATH

#
# Defines the helper to go directly to a subdirectory of $codePath
#
local codePath="$HOME/code/"
function c () {
  cd $codePath$1
}
compdef '_files -W "$codePath/" -/' c

#
# Defines the helper to go directly to a subdirectory of $codePath
#
local HullCodePath="$codePath/Hull.io/"
function ch () {
  cd $HullCodePath$1
}
compdef '_files -W "$HullCodePath/" -/' ch

#
# Auto completes the executables located in node_modules/.bin 
#
function npmbin () {
  PATH=$(npm bin):$PATH $@
}
function _comp_npm () {
  _arguments '1: :->command_'
  case $state in
    command_)
      _files -W "$(npm bin)" -/
      ;;
    *)
      _files
      ;;
  esac
}
compdef _comp_npm npmbin

# Powerline
#source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
bindkey -M viins 'ii' vi-cmd-mode
bindkey -M vicmd 'ii' vi-insert
bindkey '^R' history-incremental-search-backward

PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH" #Postgres.app
export RBENV_ROOT=/usr/local/var/rbenv
eval "$(rbenv init -)"


# vimpager
PAGER=$HOME/bin/vimpager/vimpager
function less () {
  VIMPAGER=1 $PAGER $@
}

alias cat=$HOME/bin/vimpager/vimcat

# 2011-10-19: tmux shortcut for creating/attaching named sessions
tm() {
  [[ -z "$1" ]] && { echo "usage: tm <session>" >&2; return 1; }
  if [[ "$1" == "new" ]] then
    if [[ -n "$TMUX" ]] then
      tmux detach
    fi
    tmux new-session
  else
    tmux has -t $1
    [[ $? == 0 ]] && tmux attach -t $1 || tmux new -s $1
  fi
}

# 2011-10-19
# stolen from completion function _tmux
function __tmux-sessions() {
    local expl
    local -a sessions
    sessions=( 'new':'Opens a new unnamed session' ${${(f)"$(command tmux list-sessions)"}/:[ $'\t']##/:})
    _describe -t sessions 'sessions' sessions "$@"
}
compdef __tmux-sessions tm

export SSL_CERT_FILE=/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt
